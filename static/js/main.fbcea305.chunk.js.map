{"version":3,"sources":["components/MappingCell.js","components/InputCell.js","components/CellSelector.js","components/Table.js","utils/excel.js","App.js","reportWebVitals.js","index.js"],"names":["MappingCell","id","addMapping","mailManifestHeaders","mapping","onChange","event","target","value","map","header","InputCell","addValue","type","CellSelector","isHidden","useState","cellType","setCellType","className","Table","mappings","templateHeaders","toggleColumn","values","visibilitySettings","indexOf","checked","length","exportTabDelimitedFile","headers","items","fileTitle","unshift","csv","objArray","array","JSON","parse","str","i","line","index","convertToTabDelimited","stringify","exportedFilenmae","blob","Blob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","App","setTemplateHeaders","setVisibilitySettings","setMailManifestHeaders","mailManifestRows","setMailManifestRows","setMappings","setValues","useEffect","cachedVisibilitySettings","cache","localStorage","getItem","cachedMappings","cachedValues","setItem","htmlFor","name","file","files","readXlsxFile","then","catch","console","log","rowObjs","row","reduce","obj","column","idx","col","Date","date","month","getMonth","day","getDate","year","getFullYear","join","formatDate","key","prevMappings","prevValues","split","prevSettings","arr","splice","push","onClick","aggregate","aggregateAndDownload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fbcea305.chunk.js","sourcesContent":["import React from 'react';\n\nfunction MappingCell({ id, addMapping, mailManifestHeaders, mapping }) {\n  const handleMappingSelect = event => {\n    addMapping(id, event.target.value);\n  };\n\n  return (\n    <>\n      <select\n        onChange={handleMappingSelect}\n        value={mapping || ''}\n      >\n        <option value=\"\" />\n        {mailManifestHeaders.map(header => (\n          <option\n            key={`option_${header}`}\n            value={header}\n          >\n            {header}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default MappingCell;\n","import React from 'react';\n\nfunction InputCell({ id, addValue, value }) {\n  const handleInputChange = event => {\n    addValue(id, event.target.value);\n  };\n\n  return (\n    <input\n      type=\"text\"\n      onChange={handleInputChange}\n      value={value}\n    />\n  );\n}\n\nexport default InputCell;\n","import React, { useState } from 'react';\n\nimport MappingCell from './MappingCell';\nimport InputCell from './InputCell';\n\nfunction CellSelector({ id, addMapping, addValue, isHidden, mailManifestHeaders, mapping, value }) {\n  const [cellType, setCellType] = useState('');\n\n  const chooseCellType = event => {\n    setCellType(event.target.value);\n  };\n\n  return (\n    <td className={isHidden ? '' : 'hidden'}>\n      <select\n        onChange={chooseCellType}\n        value={cellType || ''}\n      >\n        <option value=\"\" />\n        <option value=\"mapper\">Mapper</option>\n        <option value=\"input\">Input</option>\n      </select>\n      <br />\n      <br />\n      {(mapping || cellType === 'mapper') ? (\n        <MappingCell\n          id={id}\n          addMapping={addMapping}\n          mailManifestHeaders={mailManifestHeaders}\n          mapping={mapping}\n        />\n      ) : (value || cellType === 'input') ? (\n        <InputCell\n          id={id}\n          addValue={addValue}\n          value={value}\n        />\n      ) : null}\n    </td>\n  );\n}\n\nexport default CellSelector;\n","import React from 'react';\n\nimport CellSelector from './CellSelector';\n\nfunction Table({\n  addMapping,\n  addValue,\n  mailManifestHeaders,\n  mappings,\n  templateHeaders,\n  toggleColumn,\n  values,\n  visibilitySettings,\n}) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {templateHeaders\n            .map(header  => (\n              <td\n                key={`header_${header}`}\n                className={visibilitySettings.indexOf(header) === -1 ? '' : 'hidden'}\n              >\n                <span>{header}</span>\n                <br />\n                <input\n                  id={`toggle_${header}`}\n                  type=\"checkbox\"\n                  onChange={toggleColumn}\n                  checked={visibilitySettings.indexOf(header) === -1}\n                />\n              </td>\n            ))\n          }\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {mailManifestHeaders.length > 0 && templateHeaders.map(header => (\n            <CellSelector\n              key={`cell_${header}`}\n              id={header}\n              addMapping={addMapping}\n              addValue={addValue}\n              isHidden={visibilitySettings.indexOf(header) === -1}\n              mailManifestHeaders={mailManifestHeaders}\n              mapping={mappings[header] || ''}\n              value={values[header] || ''}\n            />\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import readXlsxFile from 'read-excel-file';\n\nexport function handleTemplate(file) {\n  return readXlsxFile(file)\n    .then(([headers]) => headers)\n    .catch(console.log);\n}\n\nfunction formatDate(date) {\n  let month = '' + (date.getMonth() + 1);\n  let day = '' + date.getDate();\n  const year = date.getFullYear();\n\n  if (month.length < 2)\n    month = '0' + month;\n  if (day.length < 2)\n    day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport function handleMailManifest(file) {\n  return readXlsxFile(file)\n    .then(([headers, ...rows]) => {\n      const rowObjs = rows.map((row) =>\n        row\n          .reduce((obj, column, idx) => {\n            let col = column;\n            if (col instanceof Date)\n              col = formatDate(col);\n            return {\n              ...obj,\n              [headers[idx]]: col,\n            };\n          }, {})\n      );\n      return [headers, rowObjs];\n    })\n    .catch(console.log);\n}\n\nfunction convertToTabDelimited(objArray) {\n  const array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;\n  let str = '';\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < array.length; i++) {\n    let line = '';\n    for (const index in array[i]) {\n      // TODO: Do we need to add a tab after an empty line anyway?\n      if (line !== '') line += '\\t';\n\n      line += array[i][index];\n    }\n\n    str += `${line}\\r\\n`;\n  }\n\n  return str;\n}\n\nexport function exportTabDelimitedFile(headers, items, fileTitle) {\n  if (headers) {\n    items.unshift(headers);\n  }\n\n  // Convert Object to JSON\n  const jsonObject = JSON.stringify(items);\n\n  const csv = convertToTabDelimited(jsonObject);\n\n  const exportedFilenmae = fileTitle ? `${fileTitle}.txt` : 'export.txt';\n\n  const blob = new Blob([csv], { type: 'text/plain;charset=utf-8;' });\n\n  const link = document.createElement('a');\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', exportedFilenmae);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n\nexport function aggregateAndDownload(templateHeaders, mappings, values, mailManifestRows) {\n  const aggregate = mailManifestRows.map(row => {\n    return templateHeaders.reduce((obj, header) => {\n      if (!mappings[header] && !values[header]) {\n        return {\n          ...obj,\n          [header]: '',\n        };\n      }\n      return {\n        ...obj,\n        [header]: mappings[header] ? row[mappings[header]] : values[header],\n      };\n    }, {});\n  });\n\n  exportTabDelimitedFile(templateHeaders, aggregate);\n}\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport Table from './components/Table';\n\nimport { aggregateAndDownload, handleMailManifest, handleTemplate } from './utils/excel';\n\nfunction App() {\n  const [templateHeaders, setTemplateHeaders] = useState([]);\n  const [visibilitySettings, setVisibilitySettings] = useState([]);\n  const [mailManifestHeaders, setMailManifestHeaders] = useState([]);\n  const [mailManifestRows, setMailManifestRows] = useState([]);\n  const [mappings, setMappings] = useState({});\n  const [values, setValues] = useState({});\n\n  // Load visibilitySettings cache\n  useEffect(() => {\n    const cache = localStorage.getItem('visibilitySettings');\n    let cachedVisibilitySettings;\n\n    try {\n      cachedVisibilitySettings = JSON.parse(cache);\n    } catch {\n      cachedVisibilitySettings = [];\n    }\n\n    setVisibilitySettings(cachedVisibilitySettings);\n  }, []);\n\n  // Load mappings cache\n  useEffect(() => {\n    const cache = localStorage.getItem('mappings');\n    let cachedMappings;\n\n    try {\n      cachedMappings = JSON.parse(cache);\n    } catch {\n      cachedMappings = [];\n    }\n\n    setMappings(cachedMappings);\n  }, []);\n\n   // Load values cache\n   useEffect(() => {\n    const cache = localStorage.getItem('values');\n    let cachedValues;\n\n    try {\n      cachedValues = JSON.parse(cache);\n    } catch {\n      cachedValues = [];\n    }\n\n    setValues(cachedValues);\n  }, []);\n\n  // Cache column visibility\n  useEffect(() => {\n    localStorage.setItem('visibilitySettings', JSON.stringify(visibilitySettings || []));\n  }, [visibilitySettings]);\n\n  // Cache mappings\n  useEffect(() => {\n    localStorage.setItem('mappings', JSON.stringify(mappings || {}));\n  }, [mappings]);\n\n  // Cache values\n  useEffect(() => {\n    localStorage.setItem('values', JSON.stringify(values || {}));\n  }, [values]);\n\n  const toggleColumn = event => {\n    const [, ...rest] = event.target.id.split('_');\n    const id = rest.join('_');\n    setVisibilitySettings(prevSettings => {\n      const arr = [...prevSettings];\n      const index = prevSettings.indexOf(id);\n      if (index > -1) {\n        arr.splice(index, 1);\n      } else {\n        arr.push(id);\n      }\n      return arr;\n    });\n  };\n\n  const importTemplate = event => {\n    handleTemplate(event.target.files[0])\n      .then(setTemplateHeaders);\n  };\n\n  const importMailManifest = event => {\n    handleMailManifest(event.target.files[0])\n      .then(([headers, rowObjs]) => {\n        setMailManifestHeaders(headers);\n        setMailManifestRows(rowObjs);\n      });\n  };\n\n  const addMapping = (key, value) => {\n    setMappings(prevMappings => ({\n      ...prevMappings,\n      [key]: value,\n    }))\n  };\n\n  const addValue = (key, value) => {\n    setValues(prevValues => ({\n      ...prevValues,\n      [key]: value,\n    }))\n  };\n\n  const download = () => {\n    aggregateAndDownload(templateHeaders, mappings, values, mailManifestRows);\n  };\n\n  return (\n    <div className=\"app\">\n      <form>\n        <label htmlFor=\"template\">\n          Upload Template File\n          <br />\n          <br />\n          <input\n            id=\"template\"\n            type=\"file\"\n            name=\"template\"\n            onChange={importTemplate}\n          />\n        </label>\n        <br />\n        <br />\n        <label htmlFor=\"mail_manifest\">\n          Upload Mail Manifest\n          <br />\n          <br />\n          <input\n            id=\"mail_manifest\"\n            type=\"file\"\n            name=\"mail_manifest\"\n            onChange={importMailManifest}\n          />\n        </label>\n        <br />\n        <br />\n        {templateHeaders.length > 0 && (\n          <Table\n            addMapping={addMapping}\n            addValue={addValue}\n            mailManifestHeaders={mailManifestHeaders}\n            mappings={mappings}\n            templateHeaders={templateHeaders}\n            toggleColumn={toggleColumn}\n            values={values}\n            visibilitySettings={visibilitySettings}\n          />\n        )}\n        <br />\n        <br />\n        <div>\n          <button type=\"button\" onClick={download}>\n            Download Amazon Upload File\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}